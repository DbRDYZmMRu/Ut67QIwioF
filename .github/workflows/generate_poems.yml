name: Generate Poems

on:
  push:
    branches:
      - main

jobs:
  generate_poems:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Ensure the workflow has write permission to contents

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step 2: Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      # Step 3: Install Git LFS (Large File Storage)
      - name: Install Git LFS
        run: |
          curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
          sudo apt-get install git-lfs
          git lfs install

      # Step 4: Configure Git user
      - name: Configure Git user
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Step 5: Ensure package-lock.json exists
      - name: Ensure package-lock.json exists
        run: |
          if [ ! -f package-lock.json ]; then
            echo "package-lock.json not found. Generating it..."
            npm install
          else
            echo "package-lock.json found. Proceeding."
          fi

      # Step 6: Clean and install dependencies
      - name: Clean and install dependencies
        run: |
          npm install -g npm@latest
          npm ci  # Clean install to ensure all dependencies are fresh

      # Step 7: Run the generation script
      - name: Run generation script
        run: node generate_images.js

      # Step 8: Commit and push changes
      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Stash any unstaged changes
          if ! git diff --quiet; then
            echo "Stashing unstaged changes..."
            git stash --include-untracked
          fi
          
          # Pull remote changes and rebase
          git pull origin main --rebase
          
          # Apply stashed changes (if any)
          if git stash list | grep -q "stash@{0}"; then
            echo "Applying stashed changes..."
            git stash pop
          fi
          
          # Stage changes
          git add .
          
          # Commit and push if there are changes
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m 'Generate poem images'
            git push origin HEAD:main
          fi